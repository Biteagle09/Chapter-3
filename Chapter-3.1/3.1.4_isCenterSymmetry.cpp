#include "stdafx.h"

/********************王道2019年chapter-3.1 ，应用题第4题（P37）********************************
1、题目：
	设单链表的表头指针为L，结点结构由data和next两个域构成，其中data域为字符型。
	试设计算法判断该链表的全部n个字符是否中心对称。例如xyx、xyyx都是中心对称。
2、算法思想：
	1°：使用栈来判断链表中的数据是否中心对称。将链表的前一半元素依次进栈；
	2°：在处理链表的后一半元素时，当访问到链表的一个元素后，就从栈中弹出一个元素，两个元素比较，若相等，则将链表中下一个元素与栈中再弹出的元素比较，直至链表到尾；
	3°：这时若栈是空栈，则得出链表中心对称的结论；否则，当链表中的一个元素与栈中弹出元素不等时，结论为链表非中心对称，结束算法的执行。
**********************************************************************************************/

bool IsCenterSymmetry(LinkStack LS, int n) {
	int i;  //栈顶指针
	char a[MaxSize] = {0};   //模拟栈(char型)
	LSNode *p = LS;          //待检测序列的遍历指针
	char b = (char)0;            //临时将int 型 转换为 char 型
	for (i = 0; i < n / 2; i++) {
		b = (char)p->data;     //int 转 char
		a[i] = b;             //入栈
		p = p->next;
	}
	i--;
	if (n % 2 == 1) p = p->next;    //如果序列是奇数，则将p指针向后移动一格，以达到中心位置
	while (p != NULL && a[i] == (char)p->data) {
		i--;
		p = p->next;
	}
	if (i == -1) {
		return true;
	}else {
		return false;
	}
}